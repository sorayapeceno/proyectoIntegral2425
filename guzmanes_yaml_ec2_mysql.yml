AWSTemplateFormatVersion: '2010-09-09'
Description: 'Free Tier Web Stack (Apache/Nginx/MySQL)'

Parameters:
  LatestAL2023AmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64'
    
  SSHLocation:
    Description: 'IP address range that can SSH to the EC2 instance'
    Type: String
    Default: '0.0.0.0/0'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'


Resources:
  # EC2 Instance
  WebServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref LatestAL2023AmiId
      KeyName: "guzmanes"
      IamInstanceProfile: !Ref EC2InstanceProfile
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      Tags:
        - Key: Name
          Value: WebServer  
      UserData: 
        Fn::Base64: |
          #!/bin/bash
          # Update system
          sudo dnf update -y
          
          # Install Apache (port 80)
          sudo dnf install -y httpd
          echo "<h1>Apache on Port 80</h1>" | sudo tee /var/www/html/index.html
          sudo systemctl enable --now httpd
          
          # Install Nginx (port 81)
          sudo dnf install -y nginx
          sudo sed -i 's/80/81/' /etc/nginx/nginx.conf
          echo "<h1>Nginx on Port 81</h1>" | sudo tee /usr/share/nginx/html/index.html
          sudo systemctl enable --now nginx
          
          # Install Tomcat (port 8080)
          sudo dnf install -y tomcat9 tomcat9-webapps tomcat9-admin-webapps
          
          # Configure manager access
          sudo bash -c "echo '<?xml version=\"1.0\" encoding=\"utf-8\"?>' > /usr/share/tomcat9/conf/tomcat-users.xml"
          sudo bash -c "echo '<tomcat-users>' >> /usr/share/tomcat9/conf/tomcat-users.xml"
          sudo bash -c "echo '  <role rolename=\"manager-gui\"/>' >> /usr/share/tomcat9/conf/tomcat-users.xml"
          sudo bash -c "echo '  <user username=\"admin\" password=\"admin1234\" roles=\"manager-gui\"/>' >> /usr/share/tomcat9/conf/tomcat-users.xml"
          sudo bash -c "echo '</tomcat-users>' >> /usr/share/tomcat9/conf/tomcat-users.xml"     
                    
          # Allow remote access to manager
          sudo sed -i 's|allow="127\\.\\d+\\.\\d+\\.\\d+|allow=".*|g' /usr/share/tomcat9/webapps/manager/META-INF/context.xml
          
          sudo dnf install -y java-21-amazon-corretto
          
          sudo systemctl enable --now tomcat9
          
          # Install MySQL 
          sudo dnf install mariadb1011-server -y
          sudo systemctl enable --now mariadb
          
          #sudo mysql -e "ALTER USER 'root'@'%' IDENTIFIED VIA mysql_native_password"
          #sudo mysql -e "SET PASSWORD FOR 'root'@'%' = PASSWORD('root1234')"
          sudo mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'root1234' WITH GRANT OPTION;"
          
          sudo dnf install samba samba-client samba-common -y
          # Configure samba access
          sudo bash -c "echo '[global]' > /etc/samba/smb.conf"
          sudo bash -c "echo '  workgroup = WORKGROUP' >> /etc/samba/smb.conf"
          sudo bash -c "echo '  security = user' >> /etc/samba/smb.conf"          
          sudo bash -c "echo '  passdb backend = tdbsam' >> /etc/samba/smb.conf"
          sudo bash -c "echo '  hosts allow = 0.0.0.0/0' >> /etc/samba/smb.conf"
          sudo bash -c "echo '[nginx]' >> /etc/samba/smb.conf"
          sudo bash -c "echo '  path = /usr/share/nginx/html' >> /etc/samba/smb.conf"
          sudo bash -c "echo '  browsable = yes' >> /etc/samba/smb.conf"
          sudo bash -c "echo '  writable = yes' >> /etc/samba/smb.conf"
          sudo bash -c "echo '  valid users = @smbgroup' >> /etc/samba/smb.conf"          
          sudo bash -c "echo '  read only = no' >> /etc/samba/smb.conf"
          sudo bash -c "echo '  create mask = 0777' >> /etc/samba/smb.conf"
          sudo bash -c "echo '  directory mask = 0777' >> /etc/samba/smb.conf"
          
          # Create Samba user group and add user
          sudo groupadd smbgroup
          sudo useradd --system --no-create-home --shell /bin/false sambauser
          sudo usermod -aG smbgroup sambauser
          #echo -e "SambaPass123\nSambaPass123" | sudo pdbedit -a -u sambauser -t
          (echo "SambaPass1234"; echo "SambaPass1234") | sudo smbpasswd -s -a sambauser
          sudo chown -R root:smbgroup /usr/share/nginx/html/
          sudo chmod -R 775 /usr/share/nginx/html/
          
          sudo systemctl enable --now smb
          sudo systemctl enable --now nmb


  # Security Groups
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Allow web and SSH access'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 81
          ToPort: 81
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0  
        - IpProtocol: tcp
          FromPort: 8084
          ToPort: 8084
          CidrIp: 0.0.0.0/0    
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 137
          ToPort: 138
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 139
          ToPort: 139
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 445
          ToPort: 445
          CidrIp: 0.0.0.0/0

  # IAM Role
  EC2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - "LabRole"

Outputs:
  WebServerIP:
    Description: 'Web server public IP'
    Value: !GetAtt WebServer.PublicIp
  ApacheURL:
    Description: 'Apache (port 80)'
    Value: !Sub 'http://${WebServer.PublicIp}'
  NginxURL:
    Description: 'Nginx (port 81)'
    Value: !Sub 'http://${WebServer.PublicIp}:81'
  MySQLURL:
    Description: 'MySQL (port 3306)'
    Value: !Sub '${WebServer.PublicIp}:3306'
  TomcatURL:
    Description: 'Tomcat (port 8080)'
    Value: !Sub 'http://${WebServer.PublicIp}:8080'
  SSHCommand:
    Description: 'SSH connection command'
    Value: !Sub 'ssh -i guzmanes.pem ec2-user@${WebServer.PublicIp}'
  SambaShareInfo:
    Description: 'Samba share connection information'
    Value: !Sub |
      Samba Share: \\${WebServer.PublicIp}\nginx
      Username: sambauser
      Password: [as configured]
      Shared directory: /usr/share/nginx/html